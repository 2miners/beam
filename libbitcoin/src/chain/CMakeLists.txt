file(GLOB SOURCES "*.cpp")
file(GLOB HEADERS "${LIBBITCOIN_INCLUDE_DIR}/chain/*.hpp")
add_library(libbitcoin_chain OBJECT	${SOURCES} ${HEADERS})

if(MSVC)
    target_compile_options(libbitcoin_chain PRIVATE "/wd4245")
    target_compile_options(libbitcoin_chain PRIVATE "/wd4505")
    target_compile_options(libbitcoin_chain PRIVATE "/wd4706")
    target_compile_options(libbitcoin_chain PRIVATE "/wd4996")
    target_compile_options(libbitcoin_chain PRIVATE "/wd4273")
    #target_compile_options(libbitcoin_chain PRIVATE "/wd2491")
    target_compile_options(libbitcoin_chain PRIVATE "/wd4251")
elseif(APPLE)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-mismatched-tags)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-unused-variable)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-unused-lambda-capture)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-mismatched-tags)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-reorder)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-missing-braces)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-tautological-compare)
else()
    target_compile_options(libbitcoin_chain PRIVATE -fpermissive)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-reorder)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-sign-compare)
    target_compile_options(libbitcoin_chain PRIVATE -Wno-unused-variable)
endif()